{"version":3,"file":"static/js/33.df58981d.chunk.js","mappings":"gRAGaA,EAAQC,EAAAA,GAAAA,GAAH,4DAKLC,EAAMD,EAAAA,GAAAA,IAAH,yMAWHE,EAAYF,EAAAA,GAAAA,IAAH,uGAMTG,EAAOH,EAAAA,GAAAA,GAAH,uHASJI,EAAQJ,EAAAA,GAAAA,KAAH,qKAMLK,EAASL,EAAAA,GAAAA,EAAH,8NAUNM,EAAWN,EAAAA,GAAAA,EAAH,4MAURO,EAAOP,EAAAA,GAAAA,IAAH,0GAMJQ,EAAYR,EAAAA,GAAAA,EAAH,sEAITS,GAAOT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,yO,SCpDF,SAASW,IAAgB,IAAD,UACrC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAU,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE3CC,EAAAA,EAAAA,YAAU,WACRR,GAAa,IACbS,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GAAI,OAAIb,EAASa,EAAb,IACTC,OAAM,SAAAC,GAAG,OAAIA,CAAJ,IACTC,SAAQ,kBAAMd,GAAa,EAAnB,GACZ,GAAE,CAACG,IACJ,IAAQY,EACNlB,EADMkB,YAAaC,EACnBnB,EADmBmB,MAAOC,EAC1BpB,EAD0BoB,aAAcC,EACxCrB,EADwCqB,SAAUC,EAClDtB,EADkDsB,aAAcC,EAChEvB,EADgEuB,OAElE,OAEE,iCAEE,SAAC3B,EAAD,CAAM4B,GAAIhB,EAAV,qBAKCN,GACC,SAACuB,EAAA,EAAD,KAEA,UAACrC,EAAD,YACE,0BACE,gBACEsC,MAAM,QACNC,IAAG,0CAAqCT,GACxCU,IAAKT,OAGT,UAAC9B,EAAD,YACE,UAACH,EAAD,WACGiC,EADH,YACYG,QADZ,IACYA,OADZ,EACYA,EAAcO,MAAM,EAAG,GADnC,QAGA,UAACvC,EAAD,WACoB,IAAjB8B,EACC,IAEA,0BACG,IADH,eAGE,UAAC7B,EAAD,WACG6B,EAAY,UACTU,KAAKC,OAAsB,GAAfX,UADH,aACT,EAAgCY,QAAQ,GACxC,GAHN,WAQJ,0BACG,IADH,aAGE,SAACvC,EAAD,UAAW4B,QAEb,0BACG,IADH,WAGE,SAAC7B,EAAD,UACG+B,EAASA,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAAQ,kBAOlE,SAACzC,EAAD,sCACK,UAACD,EAAD,YACE,SAACE,EAAD,CAAM4B,GAAE,OAAUf,MAAO,CAAEC,KAAI,UAAEN,EAASK,aAAX,aAAE,EAAgBC,MAAjD,mBAGA,SAACd,EAAD,CAAM4B,GAAE,UAAaf,MAAO,CAAEC,KAAI,UAAEN,EAASK,aAAX,aAAE,EAAgBC,MAApD,yBAIR,SAAC,KAAD,MAIL,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink} from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\nfont-size: 32px;\nmargin-top: 5px;\n`; \n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px auto;\n  padding: 30px;\n  border: 1px solid rgb(169, 153, 153);\n  border-radius: 10px;\n  background-color:brown;\n \n`; \n\nexport const MovieInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding:  0 40px 0 20px;\n`; \n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  gap: 10px;\n  padding: 0;\n`; \n\n\nexport const Value = styled.span`\n  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n  font-size: large;\n  font-weight: 500;\n  margin-left: 10px;\n`; \nexport const Genres = styled.p`\n  font-size: medium;\n  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n  font-weight: 500;\n  margin: 0;\n  text-indent: 3ch;\n  margin-left:0;\n  margin-top: 10px;\n  \n`;\nexport const Overview = styled.p`\n  font-size: medium;\n  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n  font-weight: 500;\n  margin: 0;\n  text-indent: 3ch;\n  margin-top: 10px;\n  \n`;\n\nexport const Info = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    gap: 20px;\n`; \nexport const InfoTitle = styled.p`\n    font-weight: 700;\n    margin-left:20px;\n`; \nexport const Link = styled(NavLink)`\n    color: black;\n    text-decoration: none;\n    font-size: larger;\n    padding: 12px;\n    background-color: yellow;\n    border-radius: 5px;\n\n\n&:hover {\n    scale: 1.05;\n    background-color: red;\n}`; \n\n\n\n","\n\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\nimport {\n  Title,\n  Box,\n  MovieInfo,\n  List,\n  Value,\n  Overview,\n Info,\n  Link,\n  Genres,\n  InfoTitle\n} from './MovieDetails.styled';\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backButton = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId)\n      .then(data => setMovie(data))\n      .catch(err => err)\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n  const { poster_path, title, vote_average, overview, release_date, genres } =\n    movie;\n  return (\n    \n    <>\n      \n      <Link to={backButton}>\n        \n          Go back\n       \n      </Link>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Box>\n          <div>\n            <img\n              width=\"240px\"\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          </div>\n          <MovieInfo>\n            <Title>\n              {title} ({release_date?.slice(0, 4)})\n            </Title>\n            <List>\n              {vote_average === 0 ? (\n                ''\n              ) : (\n                <li>\n                  {' '}\n                  User Score:\n                  <Value>\n                    {vote_average\n                      ? Math.fround(vote_average * 10)?.toFixed(0)\n                      : ''}\n                    %\n                  </Value>\n                </li>\n              )}\n              <li>\n                {' '}\n                Overview:\n                <Overview>{overview}</Overview>\n              </li>\n              <li>\n                {' '}\n                Genres:\n                <Genres>\n                  {genres ? genres.map(genre => genre.name).join(', ') : ''}\n                </Genres>\n              </li>\n            </List>\n          </MovieInfo>\n        </Box>\n      )}\n       <InfoTitle>Additional information</InfoTitle>\n            <Info>\n              <Link to={`cast`} state={{ from: location.state?.from }}>\n                Cast\n              </Link>\n              <Link to={`reviews`} state={{ from: location.state?.from }}>\n                Reviews\n              </Link>\n            </Info>\n      <Outlet />\n    \n      </>\n  );\n}\n"],"names":["Title","styled","Box","MovieInfo","List","Value","Genres","Overview","Info","InfoTitle","Link","NavLink","MovieDetails","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","movieId","useParams","backButton","state","from","useEffect","getMovieDetails","then","data","catch","err","finally","poster_path","title","vote_average","overview","release_date","genres","to","Loader","width","src","alt","slice","Math","fround","toFixed","map","genre","name","join"],"sourceRoot":""}