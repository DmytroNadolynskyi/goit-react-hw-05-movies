{"version":3,"file":"static/js/304.a1b935c3.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,uIASJC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4J,SCLF,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAd,IACTC,OAAM,SAAAC,GAAG,OAAIA,CAAJ,IACTC,SAAQ,kBAAMP,GAAa,EAAnB,GACZ,GAAE,KAGD,iCACE,kDAECD,GACC,SAACS,EAAA,EAAD,KAEA,SAACjB,EAAD,UACGM,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAClB,EAAD,CAAMmB,GAAE,iBAAYF,GAApB,SAA2BC,KADpBD,EADC,QASrB,C","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import { NavLink} from 'react-router-dom';\nimport styled from 'styled-components';\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n`;\n\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    font-size: 18px;\n    color: black;\n    padding: 5px;\n\n\n&:hover {\n    color: red;\n    \n   \n}`; \n","import Loader from 'components/Loader/Loader';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getTrandingMovies } from 'services/API';\nimport { List, Link } from './Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTrandingMovies()\n      .then(data => setMovies(data))\n      .catch(err => err)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h2>Trending movies today</h2>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <List>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`movies/${id}`}>{title}</Link>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n}\n"],"names":["List","styled","Link","NavLink","Home","useState","movies","setMovies","isLoading","setIsLoading","useEffect","getTrandingMovies","then","data","catch","err","finally","Loader","map","id","title","to"],"sourceRoot":""}